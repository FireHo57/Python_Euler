Notes as I go along:

- Whilst problem 14 does not take a lot of time to calculate the chains of all numbers less than 1,000,000 it feels
 a bit inefficient. I've read on the internet that a possible solution would be to cache the numbers of each chain as
 you go along thereby reducing future chains to an already solved state if that number is come across later. I might
 look at implementing this at some point for my solution to problem 14.

 - Problem 18. Initially thinking of identifying the highest number in each row and then trying to plot a path that
 includes as many of the highest numbers as possible.
    :: Better idea. Starting at the second row (because there are no choices in the first row) split the numbers in two
    groups. look at whichever is higher.
    :: alternately keep an idea of how much value is left in the grid and choose the path that decreases the value
    the least. do this by subtracting the rows that become unreachable when going either left or right.